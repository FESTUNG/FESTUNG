% Generates a mesh for a polygonal domain with given mesh width and refines it a
% given number of times.
%
%===============================================================================
%> @file
%>
%> @brief Generates a mesh for a polygonal domain with given mesh width and 
%>        refines it a given number of times.
%===============================================================================
%>
%> @brief Generates a mesh for a polygonal domain with given mesh width and 
%>        refines it a given number of times.
%>
%> This function creates a mesh of a polygonal domain in the same way 
%> domainPolygon() does, but uses the pde-toolbox of MATLAB to refine the grid 
%> before further grid data is generated by generateGridData().
%>
%> @param  X1,X2  The @f$x^1,x^2@f$ coordinates of the boundary points 
%>                that describe the domain.
%> @param  h      The maximum diameter of an element.
%> @param  ref    The number of refinement steps of the final grid.
%> @retval g      A struct containing the lists that describe the
%>                triangulation, as explained in <code>generateGridData()</code>.
%>                <code>idE</code> and <code>ideE0T</code> are filled correctly.
%>
%> @note  MATLABs Partial Differential Equation Toolbox or at least the
%>        function <code>initMesh()</code> is required for this routine.
%>
%> This file is part of FESTUNG
%>
%> @copyright 2014-2016 Hennes Hajduk, Florian Frank, Balthasar Reuter, Vadym Aizinger
%> 
%> @par License
%> @parblock
%> This program is free software: you can redistribute it and/or modify
%> it under the terms of the GNU General Public License as published by
%> the Free Software Foundation, either version 3 of the License, or
%> (at your option) any later version.
%>
%> This program is distributed in the hope that it will be useful,
%> but WITHOUT ANY WARRANTY; without even the implied warranty of
%> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%> GNU General Public License for more details.
%>
%> You should have received a copy of the GNU General Public License
%> along with this program.  If not, see <http://www.gnu.org/licenses/>.
%> @endparblock
%
function g = domainHierarchy(X1, X2, h, ref)
assert(length(X1) >= 3, 'At least 3 points are required for a 2D domain')
assert(isequal(size(X1), size(X2)), 'X1 and X2 must be of same size')
assert(isscalar(ref) && round(ref)==ref && ref >= 0, 'Refinement step number has to be non-negative integer.');
gd = [2; length(X1(:)); X1(:); X2(:)]; % geometry description
sf = 'polygon';                        % set formula
ns = double('polygon')';               % name space
aux = decsg(gd,sf,ns);
[p, e, t] = initmesh(aux, 'Hmax', h);
for i = 1:ref
  [p, e, t] = refinemesh(aux,p,e,t);
end % for
  g  = generateGridData(p', t(1:3, :)');
  g.idE = zeros(g.numE, 1);
  g.idE(g.V2E(sub2ind(size(g.V2E),e(1,:),e(2,:)))) = e(5,:);
  g.idE0T = g.idE(g.E0T); % local edge IDs
end % function
